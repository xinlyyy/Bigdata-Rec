train_input_path: "data/test/tb_data/taobao_train_data"
eval_input_path: "data/test/tb_data/taobao_test_data"
model_dir: "experiments/dssm_taobao_backbone_ckpt"

train_config {
  log_step_count_steps: 200
  optimizer_config: {
    adam_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate {
          initial_learning_rate: 0.001
          decay_steps: 4000
          decay_factor: 0.5
          min_learning_rate: 0.00001
        }
      }
    }
    use_moving_average: false
  }
  save_checkpoints_steps: 4000
  sync_replicas: false
  num_steps: 100000
}

eval_config {
  metrics_set: {
    recall_at_topk {
      topk: 50
    }
  }
  metrics_set: {
    recall_at_topk {
      topk: 10
    }
  }
  metrics_set: {
    recall_at_topk {
      topk: 5
    }
  }
  metrics_set: {
    recall_at_topk {
      topk: 1
    }
  }

}

data_config {
  input_fields {
    input_name:'clk'
    input_type: INT32
  }
  input_fields {
    input_name:'buy'
    input_type: INT32
  }
  input_fields {
    input_name: 'pid'
    input_type: STRING
  }
  input_fields {
    input_name: 'adgroup_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'cate_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'campaign_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'customer'
    input_type: STRING
  }
  input_fields {
    input_name: 'brand'
    input_type: STRING
  }
  input_fields {
    input_name: 'user_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'cms_segid'
    input_type: STRING
  }
  input_fields {
    input_name: 'cms_group_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'final_gender_code'
    input_type: STRING
  }
  input_fields {
    input_name: 'age_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'pvalue_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'shopping_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'occupation'
    input_type: STRING
  }
  input_fields {
    input_name: 'new_user_class_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'tag_category_list'
    input_type: STRING
  }
  input_fields {
    input_name: 'tag_brand_list'
    input_type: STRING
  }
  input_fields {
    input_name: 'price'
    input_type: INT32
  }

  label_fields: 'clk'
  batch_size: 4096
  num_epochs: 10000
  prefetch_size: 32
  input_type: CSVInput

  negative_sampler {
    input_path: 'data/test/tb_data/taobao_ad_feature_gl'
    num_sample: 1024
    num_eval_sample: 2048
    attr_fields: 'adgroup_id'
    attr_fields: 'cate_id'
    attr_fields: 'campaign_id'
    attr_fields: 'customer'
    attr_fields: 'brand'
    item_id_field: 'adgroup_id'
  }
}

feature_config: {
  features: {
    input_names: 'pid'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'adgroup_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'cate_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10000
  }
  features: {
    input_names: 'campaign_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'customer'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'brand'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'user_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'cms_segid'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100
  }
  features: {
    input_names: 'cms_group_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100
  }
  features: {
    input_names: 'final_gender_code'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'age_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'pvalue_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'shopping_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'occupation'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'new_user_class_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
     input_names: 'tag_category_list'
     feature_type: TagFeature
     separator: '|'
     hash_bucket_size: 100000
     embedding_dim: 16
  }
  features: {
     input_names: 'tag_brand_list'
     feature_type: TagFeature
     separator: '|'
     hash_bucket_size: 100000
     embedding_dim: 16
  }
  features: {
    input_names: 'price'
    feature_type: IdFeature
    embedding_dim: 16
    num_buckets: 50
  }
}
model_config:{
  model_name: 'DSSM'
  model_class: 'MatchModel'
  feature_groups: {
    group_name: 'user'
    feature_names: 'user_id'
    feature_names: 'cms_segid'
    feature_names: 'cms_group_id'
    feature_names: 'age_level'
    feature_names: 'pvalue_level'
    feature_names: 'shopping_level'
    feature_names: 'occupation'
    feature_names: 'new_user_class_level'
    feature_names: 'tag_category_list'
    feature_names: 'tag_brand_list'
    wide_deep:DEEP
  }
  feature_groups: {
    group_name: "item"
    feature_names: 'adgroup_id'
    feature_names: 'cate_id'
    feature_names: 'campaign_id'
    feature_names: 'customer'
    feature_names: 'brand'
    #feature_names: 'price'
    #feature_names: 'pid'
    wide_deep:DEEP
  }
  backbone {
    blocks {
      name: 'user'
      inputs {
        feature_group_name: 'user'
      }
      input_layer {
        output_2d_tensor_and_feature_list: false
      }
    }
    blocks {
      name: 'item'
      inputs {
        feature_group_name: 'item'
      }
      input_layer {
        output_2d_tensor_and_feature_list: false
      }
    }

    blocks {
        name: 'user_tower'
        inputs {
          block_name: 'user'
        }
        keras_layer {
          class_name: 'MLP'
          mlp {
            hidden_units: [128, 32]
            use_final_bn: false
            final_activation: 'linear'
          }
        }
      }

    blocks {
        name: 'item_tower'
        inputs {
          block_name: 'item'
        }
        keras_layer {
          class_name: 'MLP'
          mlp {
            hidden_units: [128, 32]
            use_final_bn: false
            final_activation: 'linear'
          }
        }
      }
    output_blocks: ['user_tower', 'item_tower']

 }
 model_params {
    l2_regularization: 1e-4
    user_tower_idx_in_output: 0
    item_tower_idx_in_output: 1
    scale_simi: false
    simi_func: COSINE
    temperature: 0.01
  }
  embedding_regularization: 5e-5
  loss_type: SOFTMAX_CROSS_ENTROPY

}

export_config {
}
