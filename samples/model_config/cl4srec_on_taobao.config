train_input_path: "data/test/tb_data/taobao_train_data"
eval_input_path: "data/test/tb_data/taobao_test_data"
model_dir: "experiments/cl4srec_on_taobao_ckpt"

train_config {
  log_step_count_steps: 100
  optimizer_config: {
    adam_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate {
          initial_learning_rate: 0.001
          decay_steps: 1000
          decay_factor: 0.5
          min_learning_rate: 0.00001
        }
      }
    }
    use_moving_average: false
  }
  save_checkpoints_steps: 100
  sync_replicas: True
  num_steps: 10
}

eval_config {
  metrics_set: {
    auc {}
  }
}

data_config {
  input_fields {
    input_name:'clk'
    input_type: INT32
  }
  input_fields {
    input_name:'buy'
    input_type: INT32
  }
  input_fields {
    input_name: 'pid'
    input_type: STRING
  }
  input_fields {
    input_name: 'adgroup_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'cate_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'campaign_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'customer'
    input_type: STRING
  }
  input_fields {
    input_name: 'brand'
    input_type: STRING
  }
  input_fields {
    input_name: 'user_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'cms_segid'
    input_type: STRING
  }
  input_fields {
    input_name: 'cms_group_id'
    input_type: STRING
  }
  input_fields {
    input_name: 'final_gender_code'
    input_type: STRING
  }
  input_fields {
    input_name: 'age_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'pvalue_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'shopping_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'occupation'
    input_type: STRING
  }
  input_fields {
    input_name: 'new_user_class_level'
    input_type: STRING
  }
  input_fields {
    input_name: 'tag_category_list'
    input_type: STRING
  }
  input_fields {
    input_name: 'tag_brand_list'
    input_type: STRING
  }
  input_fields {
    input_name: 'price'
    input_type: INT32
  }

  label_fields: 'clk'
  batch_size: 1024
  num_epochs: 1
  prefetch_size: 1
  input_type: CSVInput
}

feature_config: {
  features: {
    input_names: 'pid'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'adgroup_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'cate_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10000
    embedding_name: 'cate_id'
  }
  features: {
    input_names: 'campaign_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'customer'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'brand'
    feature_type: IdFeature
    embedding_dim: 16
     embedding_name: 'brand'
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'user_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100000
  }
  features: {
    input_names: 'cms_segid'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100
  }
  features: {
    input_names: 'cms_group_id'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 100
  }
  features: {
    input_names: 'final_gender_code'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'age_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'pvalue_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'shopping_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'occupation'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
    input_names: 'new_user_class_level'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 10
  }
  features: {
     input_names: 'tag_category_list'
     feature_type: SequenceFeature
     separator: '|'
     hash_bucket_size: 10000
     embedding_dim: 16
     embedding_name: 'cate_id'
     max_seq_len: 50
  }
  features: {
     input_names: 'tag_brand_list'
     feature_type: SequenceFeature
     separator: '|'
     hash_bucket_size: 100000
     embedding_dim: 16
     embedding_name: 'brand'
     max_seq_len: 50
  }
  features: {
    input_names: 'price'
    feature_type: IdFeature
    embedding_dim: 16
    num_buckets: 50
  }
}
model_config: {
  model_name: 'CL4SRec'
  model_class: 'RankModel'
  feature_groups: {
    group_name: 'item'
    feature_names: 'adgroup_id'
    feature_names: 'campaign_id'
    feature_names: 'cate_id'
    feature_names: 'brand'
    feature_names: 'customer'
    feature_names: 'price'
    feature_names: 'pid'
    wide_deep: DEEP
  }
  feature_groups: {
    group_name: 'user'
    feature_names: 'user_id'
    feature_names: 'cms_segid'
    feature_names: 'cms_group_id'
    feature_names: 'age_level'
    feature_names: 'pvalue_level'
    feature_names: 'shopping_level'
    feature_names: 'occupation'
    feature_names: 'new_user_class_level'
    wide_deep: DEEP
  }
  feature_groups: {
    group_name: 'user_seq'
    feature_names: "tag_brand_list"
    feature_names: "tag_category_list"
    wide_deep: DEEP
  }
  backbone {
    blocks {
      name: 'user_seq'
      inputs {
        feature_group_name: 'user_seq'
      }
      input_layer {
        output_seq_and_normal_feature: true
      }
    }
    packages {
      name: 'seq_augment'
      blocks {
        name: 'augment'
        inputs {
          block_name: 'user_seq'
        }
        keras_layer {
          class_name: 'SeqAugment'
          seq_aug {
            mask_rate: 0.6
            crop_rate: 0.2
            reorder_rate: 0.6
          }
        }
      }
    }
    packages {
      name: 'seq_encoder'
      blocks {
        name: 'BST'
        inputs {
          use_package_input: true
        }
        keras_layer {
          class_name: 'BST'
          bst {
            hidden_size: 128
            num_attention_heads: 2
            num_hidden_layers: 2
            intermediate_size: 128
            hidden_act: 'gelu'
            max_position_embeddings: 50
            hidden_dropout_prob: 0.1
            attention_probs_dropout_prob: 0
            output_all_token_embeddings: false
          }
        }
      }
    }
    blocks {
      name: 'contrastive'
      inputs {
        package_name: 'seq_encoder'
        package_input: 'seq_augment'
      }
      inputs {
        package_name: 'seq_encoder'
        package_input: 'seq_augment'
      }
      merge_inputs_into_list: true
      keras_layer {
        class_name: 'AuxiliaryLoss'
        st_params {
          fields {
            key: 'loss_type'
            value: { string_value: 'nce_loss' }
          }
          fields {
            key: 'loss_weight'
            value: { number_value: 0.1 }
          }
          fields {
            key: 'temperature'
            value: { number_value: 0.15 }
          }
        }
      }
    }
    blocks {
      name: 'main'
      inputs {
        package_name: 'seq_encoder'
        package_input: 'user_seq'
      }
      inputs {
        feature_group_name: 'user'
      }
      inputs {
        feature_group_name: 'item'
      }
    }
    concat_blocks: 'main'
    top_mlp {
      hidden_units: [256, 64]
    }
  }
  model_params {
    l2_regularization: 0
  }
  embedding_regularization: 0
}

export_config {
  multi_placeholder: false
}
